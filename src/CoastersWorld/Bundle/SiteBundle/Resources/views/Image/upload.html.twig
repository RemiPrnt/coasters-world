{% extends '::base.html.twig' %}

{# block stylesheets %}
    <link rel="stylesheet" href="{{ asset('bundles/coastersworldsite/css/jquery.fileupload-ui.css') }}">
{% endblock %}

{% block javascripts %}
    <!-- The jQuery UI widget factory, can be omitted if jQuery UI is already included -->
    <script src="{{ asset('bundles/coastersworldsite/js/vendor/jquery.ui.widget.js') }}"></script>

    <!-- The Load Image plugin is included for the preview images and image resizing functionality -->
<script src="http://blueimp.github.com/JavaScript-Load-Image/load-image.min.js"></script>
<!-- The Canvas to Blob plugin is included for image resizing functionality -->
<script src="http://blueimp.github.com/JavaScript-Canvas-to-Blob/canvas-to-blob.min.js"></script>
 <!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
    <script src="{{ asset('bundles/coastersworldsite/js/vendor/jquery.iframe-transport.js') }}"></script>
    <!-- The basic File Upload plugin -->
    <script src="{{ asset('bundles/coastersworldsite/js/vendor/jquery.fileupload.js') }}"></script>
    <script src="{{ asset('bundles/coastersworldsite/js/vendor/jquery.fileupload-process.js') }}"></script>
<!-- The File Upload image resize plugin -->
<script src="{{ asset('bundles/coastersworldsite/js/vendor/jquery.fileupload-resize.js') }}"></script>
<!-- The File Upload validation plugin -->
<script src="{{ asset('bundles/coastersworldsite/js/vendor/jquery.fileupload-validate.js') }}"></script>
    <script>
/*jslint unparam: true */
/*global window, $ */

jQuery(document).ready(function ($) {
    'use strict';
    // Change this to the location of your server-side upload handler:
    var url = "{{ path('coasters_world_image_test') }}",
        uploadButton = $('<button/>')
            .addClass('btn')
            .prop('disabled', true)
            .text('Processing...')
            .on('click', function () {
                var $this = $(this),
                    data = $this.data();
                $this
                    .off('click')
                    .text('Abort')
                    .on('click', function () {
                        $this.remove();
                        data.abort();
                    });
                data.submit().always(function () {
                    $this.remove();
                });
            });
    $('#fileupload').fileupload({
        url: url,
        dataType: 'json',
        autoUpload: false,
        acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
        maxFileSize: 5000000, // 5 MB
        loadImageMaxFileSize: 15000000, // 15MB
        disableImageResize: false,
        previewMaxWidth: 100,
        previewMaxHeight: 100,
        previewCrop: true
    }).on('fileuploadadd', function (e, data) {
        data.context = $('<div/>').appendTo('#files');
        $.each(data.files, function (index, file) {
            var node = $('<p/>')
                    .append($('<span/>').text(file.name));
            if (!index) {
                node
                    .append('<br>')
                    .append(uploadButton.clone(true).data(data));
            }
            node.appendTo(data.context);
        });
    }).on('fileuploadprocessalways', function (e, data) {
        var index = data.index,
            file = data.files[index],
            node = $(data.context.children()[index]);
        if (file.preview) {
            node
                .prepend('<br>')
                .prepend(file.preview);
        }
        if (file.error) {
            node
                .append('<br>')
                .append(file.error);
        }
        if (index + 1 === data.files.length) {
            data.context.find('button')
                .text('Upload')
                .prop('disabled', !!data.files.error);
        }
    }).on('fileuploadprogressall', function (e, data) {
        var progress = parseInt(data.loaded / data.total * 100, 10);
        $('#progress .bar').css(
            'width',
            progress + '%'
        );
    }).on('fileuploaddone', function (e, data) {
        $.each(data.result.files, function (index, file) {
            var link = $('<a>')
                .attr('target', '_blank')
                .prop('href', file.url);
            $(data.context.children()[index])
                .wrap(link);
        });
    }).on('fileuploadfail', function (e, data) {
        $.each(data.result.files, function (index, file) {
            var error = $('<span/>').text(file.error);
            $(data.context.children()[index])
                .append('<br>')
                .append(error);
        });
    });
});
</script>
{% endblock #}

{% block body %}

    <div class="row">
        <div class="span8">
            <div class="content">
                <section class="blog">
                    <div class="page-header">
                        <h1>Upload image</h1>
                    </div>
                    {{ form_start(form) }}

                        {{ form_rest(form) }}
                        <button type="submit" id="submit" class="btn btn-large">{{ 'news.save'|trans }}</button>
                        {#<button type="submit" id="submit" class="btn btn-large">{{ 'news.reset'|trans }}</button>#}
                    {{ form_end(form) }}
                </section>
            </div>
        </div>
    </div>



{#
<form action="#" method="post" {{ form_enctype(form) }}>

    <!-- The fileinput-button span is used to style the file input field as button -->
    <span class="btn btn-success fileinput-button">
        <i class="icon-plus icon-white"></i>
        <span>Select files...</span>
        <!-- The file input field used as target for the file upload widget -->
        <input id="form_file" type="file" name="form[file]" multiple>
    </span>
    <br>
    <br>
    <!-- The global progress bar -->
    <div id="progress" class="progress progress-success progress-striped">
        <div class="bar"></div>
    </div>
    <!-- The container for the uploaded files -->
    <div id="files"></div>

    <input type="submit" value="Upload Document" />
</form>
#}
{% endblock %}
